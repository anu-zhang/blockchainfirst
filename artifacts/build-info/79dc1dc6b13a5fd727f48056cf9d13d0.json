{
	"id": "79dc1dc6b13a5fd727f48056cf9d13d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV4.sol": {
				"content": "pragma solidity >=0.4.22 <=0.6.0;\ncontract Ballot {\n\n    struct Voter {                     \n        uint weight;\n        bool voted;\n        uint vote;\n    }\n    struct Proposal {                  \n        uint voteCount;\n    }\n\n    address chairperson;\n    mapping(address => Voter) voters;  \n    Proposal[] proposals;\n\n    \n       //modifiers\n   \n    modifier onlyChair() \n     {require(msg.sender == chairperson);\n      _;\n     }\n     \n     modifier validVoter()\n    {\n        require(voters[msg.sender].weight > 0, \"不是投票人\");\n        _;\n    }\n\n    constructor (uint numProposals) public  {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2; // weight 2 for testing purposes\n        //proposals.length = numProposals; -- before 0.6.0\n        for (uint8 prop = 0; prop < numProposals; prop ++)\n            proposals.push(Proposal(0));\n        \n    }\n    \n     \n    function register(address voter) public  onlyChair {\n        \n        voters[voter].weight = 1;\n        voters[voter].voted = false;\n    }\n\n   \n    function vote(uint toProposal) public  validVoter{\n      \n        Voter memory sender = voters[msg.sender];\n        \n        require (!sender.voted,\"已经投过票了\"); \n        require (toProposal < proposals.length,\"没有该选项\"); \n        \n        sender.voted = true;\n        sender.vote = toProposal;   \n        proposals[toProposal].voteCount += sender.weight;\n    }\n\n    function reqWinner() public view returns (uint winningProposal) {\n       \n        uint winningVoteCount = 0;\n        for (uint prop = 0; prop < proposals.length; prop++) \n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                winningProposal = prop;\n            }\n       assert(winningVoteCount>=3);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"BallotV4.sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numProposals",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reqWinner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "toProposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BallotV4.sol\":34:1826  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"BallotV4.sol\":562:884  constructor (uint numProposals) public  {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"BallotV4.sol\":562:884  constructor (uint numProposals) public  {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"BallotV4.sol\":562:884  constructor (uint numProposals) public  {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"BallotV4.sol\":626:636  msg.sender */\n  caller\n    /* \"BallotV4.sol\":612:623  chairperson */\n  0x00\n  dup1\n    /* \"BallotV4.sol\":612:636  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV4.sol\":675:676  2 */\n  0x02\n    /* \"BallotV4.sol\":646:652  voters */\n  0x01\n    /* \"BallotV4.sol\":646:665  voters[chairperson] */\n  0x00\n    /* \"BallotV4.sol\":653:664  chairperson */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV4.sol\":646:665  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV4.sol\":646:672  voters[chairperson].weight */\n  0x00\n  add\n    /* \"BallotV4.sol\":646:676  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV4.sol\":783:793  uint8 prop */\n  0x00\n    /* \"BallotV4.sol\":796:797  0 */\n  dup1\n    /* \"BallotV4.sol\":783:797  uint8 prop = 0 */\n  swap1\n  pop\n    /* \"BallotV4.sol\":778:868  for (uint8 prop = 0; prop < numProposals; prop ++)... */\ntag_5:\n    /* \"BallotV4.sol\":806:818  numProposals */\n  dup2\n    /* \"BallotV4.sol\":799:803  prop */\n  dup2\n    /* \"BallotV4.sol\":799:818  prop < numProposals */\n  0xff\n  and\n  lt\n    /* \"BallotV4.sol\":778:868  for (uint8 prop = 0; prop < numProposals; prop ++)... */\n  iszero\n  tag_6\n  jumpi\n    /* \"BallotV4.sol\":841:850  proposals */\n  0x02\n    /* \"BallotV4.sol\":856:867  Proposal(0) */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"BallotV4.sol\":865:866  0 */\n  0x00\n    /* \"BallotV4.sol\":856:867  Proposal(0) */\n  dup2\n  mstore\n  pop\n    /* \"BallotV4.sol\":841:868  proposals.push(Proposal(0)) */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"BallotV4.sol\":841:868  proposals.push(Proposal(0)) */\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  pop\n  pop\n    /* \"BallotV4.sol\":820:827  prop ++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"BallotV4.sol\":778:868  for (uint8 prop = 0; prop < numProposals; prop ++)... */\n  jump(tag_5)\ntag_6:\n  pop\n    /* \"BallotV4.sol\":562:884  constructor (uint numProposals) public  {... */\n  pop\n    /* \"BallotV4.sol\":34:1826  contract Ballot {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV4.sol\":34:1826  contract Ballot {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BallotV4.sol\":34:1826  contract Ballot {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x508b30c9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV4.sol\":1048:1426  function vote(uint toProposal) public  validVoter{... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"BallotV4.sol\":1048:1426  function vote(uint toProposal) public  validVoter{... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"BallotV4.sol\":900:1038  function register(address voter) public  onlyChair {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"BallotV4.sol\":900:1038  function register(address voter) public  onlyChair {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"BallotV4.sol\":1432:1824  function reqWinner() public view returns (uint winningProposal) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV4.sol\":1048:1426  function vote(uint toProposal) public  validVoter{... */\n    tag_8:\n        /* \"BallotV4.sol\":517:518  0 */\n      0x00\n        /* \"BallotV4.sol\":489:495  voters */\n      0x01\n        /* \"BallotV4.sol\":489:507  voters[msg.sender] */\n      0x00\n        /* \"BallotV4.sol\":496:506  msg.sender */\n      caller\n        /* \"BallotV4.sol\":489:507  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV4.sol\":489:514  voters[msg.sender].weight */\n      0x00\n      add\n      sload\n        /* \"BallotV4.sol\":489:518  voters[msg.sender].weight > 0 */\n      gt\n        /* \"BallotV4.sol\":481:538  require(voters[msg.sender].weight > 0, \"不是投票人\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0xe4b88de698afe68a95e7a5a8e4baba0000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"BallotV4.sol\":1114:1133  Voter memory sender */\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"BallotV4.sol\":1136:1142  voters */\n      0x01\n        /* \"BallotV4.sol\":1136:1154  voters[msg.sender] */\n      0x00\n        /* \"BallotV4.sol\":1143:1153  msg.sender */\n      caller\n        /* \"BallotV4.sol\":1136:1154  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV4.sol\":1114:1154  Voter memory sender = voters[msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"BallotV4.sol\":1183:1189  sender */\n      dup1\n        /* \"BallotV4.sol\":1183:1195  sender.voted */\n      0x20\n      add\n      mload\n        /* \"BallotV4.sol\":1182:1195  !sender.voted */\n      iszero\n        /* \"BallotV4.sol\":1173:1217  require (!sender.voted,\"已经投过票了\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0xe5b7b2e7bb8fe68a95e8bf87e7a5a8e4ba860000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"BallotV4.sol\":1250:1259  proposals */\n      0x02\n        /* \"BallotV4.sol\":1250:1266  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV4.sol\":1237:1247  toProposal */\n      dup3\n        /* \"BallotV4.sol\":1237:1266  toProposal < proposals.length */\n      lt\n        /* \"BallotV4.sol\":1228:1285  require (toProposal < proposals.length,\"没有该选项\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0xe6b2a1e69c89e8afa5e98089e9a1b90000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"BallotV4.sol\":1320:1324  true */\n      0x01\n        /* \"BallotV4.sol\":1305:1311  sender */\n      dup2\n        /* \"BallotV4.sol\":1305:1317  sender.voted */\n      0x20\n      add\n        /* \"BallotV4.sol\":1305:1324  sender.voted = true */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV4.sol\":1348:1358  toProposal */\n      dup2\n        /* \"BallotV4.sol\":1334:1340  sender */\n      dup2\n        /* \"BallotV4.sol\":1334:1345  sender.vote */\n      0x40\n      add\n        /* \"BallotV4.sol\":1334:1358  sender.vote = toProposal */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV4.sol\":1406:1412  sender */\n      dup1\n        /* \"BallotV4.sol\":1406:1419  sender.weight */\n      0x00\n      add\n      mload\n        /* \"BallotV4.sol\":1371:1380  proposals */\n      0x02\n        /* \"BallotV4.sol\":1381:1391  toProposal */\n      dup4\n        /* \"BallotV4.sol\":1371:1392  proposals[toProposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV4.sol\":1371:1402  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotV4.sol\":1371:1419  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV4.sol\":548:549  _ */\n      pop\n        /* \"BallotV4.sol\":1048:1426  function vote(uint toProposal) public  validVoter{... */\n      pop\n      jump\t// out\n        /* \"BallotV4.sol\":900:1038  function register(address voter) public  onlyChair {... */\n    tag_11:\n        /* \"BallotV4.sol\":404:415  chairperson */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV4.sol\":390:415  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV4.sol\":390:400  msg.sender */\n      caller\n        /* \"BallotV4.sol\":390:415  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BallotV4.sol\":382:416  require(msg.sender == chairperson) */\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n        /* \"BallotV4.sol\":993:994  1 */\n      0x01\n        /* \"BallotV4.sol\":970:976  voters */\n      dup1\n        /* \"BallotV4.sol\":970:983  voters[voter] */\n      0x00\n        /* \"BallotV4.sol\":977:982  voter */\n      dup4\n        /* \"BallotV4.sol\":970:983  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV4.sol\":970:990  voters[voter].weight */\n      0x00\n      add\n        /* \"BallotV4.sol\":970:994  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV4.sol\":1026:1031  false */\n      0x00\n        /* \"BallotV4.sol\":1004:1010  voters */\n      0x01\n        /* \"BallotV4.sol\":1004:1017  voters[voter] */\n      0x00\n        /* \"BallotV4.sol\":1011:1016  voter */\n      dup4\n        /* \"BallotV4.sol\":1004:1017  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV4.sol\":1004:1023  voters[voter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV4.sol\":1004:1031  voters[voter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV4.sol\":900:1038  function register(address voter) public  onlyChair {... */\n      pop\n      jump\t// out\n        /* \"BallotV4.sol\":1432:1824  function reqWinner() public view returns (uint winningProposal) {... */\n    tag_13:\n        /* \"BallotV4.sol\":1474:1494  uint winningProposal */\n      0x00\n        /* \"BallotV4.sol\":1514:1535  uint winningVoteCount */\n      dup1\n        /* \"BallotV4.sol\":1538:1539  0 */\n      0x00\n        /* \"BallotV4.sol\":1514:1539  uint winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"BallotV4.sol\":1554:1563  uint prop */\n      0x00\n        /* \"BallotV4.sol\":1566:1567  0 */\n      dup1\n        /* \"BallotV4.sol\":1554:1567  uint prop = 0 */\n      swap1\n      pop\n        /* \"BallotV4.sol\":1549:1782  for (uint prop = 0; prop < proposals.length; prop++) ... */\n    tag_27:\n        /* \"BallotV4.sol\":1576:1585  proposals */\n      0x02\n        /* \"BallotV4.sol\":1576:1592  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV4.sol\":1569:1573  prop */\n      dup2\n        /* \"BallotV4.sol\":1569:1592  prop < proposals.length */\n      lt\n        /* \"BallotV4.sol\":1549:1782  for (uint prop = 0; prop < proposals.length; prop++) ... */\n      iszero\n      tag_28\n      jumpi\n        /* \"BallotV4.sol\":1647:1663  winningVoteCount */\n      dup2\n        /* \"BallotV4.sol\":1619:1628  proposals */\n      0x02\n        /* \"BallotV4.sol\":1629:1633  prop */\n      dup3\n        /* \"BallotV4.sol\":1619:1634  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV4.sol\":1619:1644  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV4.sol\":1619:1663  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotV4.sol\":1615:1782  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"BallotV4.sol\":1702:1711  proposals */\n      0x02\n        /* \"BallotV4.sol\":1712:1716  prop */\n      dup2\n        /* \"BallotV4.sol\":1702:1717  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV4.sol\":1702:1727  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV4.sol\":1683:1727  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotV4.sol\":1763:1767  prop */\n      dup1\n        /* \"BallotV4.sol\":1745:1767  winningProposal = prop */\n      swap3\n      pop\n        /* \"BallotV4.sol\":1615:1782  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_32:\n        /* \"BallotV4.sol\":1594:1600  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BallotV4.sol\":1549:1782  for (uint prop = 0; prop < proposals.length; prop++) ... */\n      jump(tag_27)\n    tag_28:\n      pop\n        /* \"BallotV4.sol\":1815:1816  3 */\n      0x03\n        /* \"BallotV4.sol\":1797:1813  winningVoteCount */\n      dup2\n        /* \"BallotV4.sol\":1797:1816  winningVoteCount>=3 */\n      lt\n      iszero\n        /* \"BallotV4.sol\":1790:1817  assert(winningVoteCount>=3) */\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n        /* \"BallotV4.sol\":1432:1824  function reqWinner() public view returns (uint winningProposal) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"BallotV4.sol\":34:1826  contract Ballot {... */\n    tag_18:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d1e8696a5592315ad506f6fd012c78d5dc6bf6f39d5b70636af6dc836e20d7d264736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161067e38038061067e8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060008090505b818160ff16101561014e576002604051806020016040528060008152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000155505080806001019150506100f3565b505061051f8061015f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f146100465780634420e48614610074578063508b30c9146100b8575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100d6565b005b6100b66004803603602081101561008a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034e565b005b6100c061044c565b6040518082815260200191505060405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541161018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807fe4b88de698afe68a95e7a5a8e4baba000000000000000000000000000000000081525060200191505060405180910390fd5b6101966104c6565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff161515151581526020016002820154815250509050806020015115610289576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807fe5b7b2e7bb8fe68a95e8bf87e7a5a8e4ba86000000000000000000000000000081525060200191505060405180910390fd5b6002805490508210610303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807fe6b2a1e69c89e8afa5e98089e9a1b9000000000000000000000000000000000081525060200191505060405180910390fd5b60018160200190151590811515815250508181604001818152505080600001516002838154811061033057fe5b90600052602060002001600001600082825401925050819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a757600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690831515021790555050565b6000806000905060008090505b6002805490508110156104b657816002828154811061047457fe5b906000526020600020016000015411156104a9576002818154811061049557fe5b906000526020600020016000015491508092505b8080600101915050610459565b5060038110156104c257fe5b5090565b60405180606001604052806000815260200160001515815260200160008152509056fea2646970667358221220d1e8696a5592315ad506f6fd012c78d5dc6bf6f39d5b70636af6dc836e20d7d264736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x67E CODESIZE SUB DUP1 PUSH2 0x67E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x14E JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF3 JUMP JUMPDEST POP POP PUSH2 0x51F DUP1 PUSH2 0x15F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x34E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE4B88DE698AFE68A95E7A5A8E4BABA0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x196 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE5B7B2E7BB8FE68A95E8BF87E7A5A8E4BA860000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE6B2A1E69C89E8AFA5E98089E9A1B90000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x330 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4B6 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x474 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x495 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x459 JUMP JUMPDEST POP PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x4C2 JUMPI INVALID JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xE8 PUSH10 0x6A5592315AD506F6FD01 0x2C PUSH25 0xD5DC6BF6F39D5B70636AF6DC836E20D7D264736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "34:1792:0:-:0;;;562:322;8:9:-1;5:2;;;30:1;27;20:12;5:2;562:322:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;562:322:0;;;;;;;;;;;;;;;;626:10;612:11;;:24;;;;;;;;;;;;;;;;;;675:1;646:6;:19;653:11;;;;;;;;;;;646:19;;;;;;;;;;;;;;;:26;;:30;;;;783:10;796:1;783:14;;778:90;806:12;799:4;:19;;;778:90;;;841:9;856:11;;;;;;;;865:1;856:11;;;841:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;841:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:7;;;;;;;778:90;;;;562:322;34:1792;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f146100465780634420e48614610074578063508b30c9146100b8575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100d6565b005b6100b66004803603602081101561008a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034e565b005b6100c061044c565b6040518082815260200191505060405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541161018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807fe4b88de698afe68a95e7a5a8e4baba000000000000000000000000000000000081525060200191505060405180910390fd5b6101966104c6565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff161515151581526020016002820154815250509050806020015115610289576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807fe5b7b2e7bb8fe68a95e8bf87e7a5a8e4ba86000000000000000000000000000081525060200191505060405180910390fd5b6002805490508210610303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807fe6b2a1e69c89e8afa5e98089e9a1b9000000000000000000000000000000000081525060200191505060405180910390fd5b60018160200190151590811515815250508181604001818152505080600001516002838154811061033057fe5b90600052602060002001600001600082825401925050819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a757600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690831515021790555050565b6000806000905060008090505b6002805490508110156104b657816002828154811061047457fe5b906000526020600020016000015411156104a9576002818154811061049557fe5b906000526020600020016000015491508092505b8080600101915050610459565b5060038110156104c257fe5b5090565b60405180606001604052806000815260200160001515815260200160008152509056fea2646970667358221220d1e8696a5592315ad506f6fd012c78d5dc6bf6f39d5b70636af6dc836e20d7d264736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x34E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE4B88DE698AFE68A95E7A5A8E4BABA0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x196 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE5B7B2E7BB8FE68A95E8BF87E7A5A8E4BA860000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE6B2A1E69C89E8AFA5E98089E9A1B90000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x330 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4B6 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x474 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x495 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x459 JUMP JUMPDEST POP PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x4C2 JUMPI INVALID JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xE8 PUSH10 0x6A5592315AD506F6FD01 0x2C PUSH25 0xD5DC6BF6F39D5B70636AF6DC836E20D7D264736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "34:1792:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34:1792:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1048:378;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1048:378:0;;;;;;;;;;;;;;;;;:::i;:::-;;900:138;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;900:138:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1432:392;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1048:378;517:1;489:6;:18;496:10;489:18;;;;;;;;;;;;;;;:25;;;:29;481:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1114:19:::1;;:::i;:::-;1136:6;:18;1143:10;1136:18;;;;;;;;;;;;;;;1114:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1183:6;:12;;;1182:13;1173:44;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1250:9;:16;;;;1237:10;:29;1228:57;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1320:4;1305:6;:12;;:19;;;;;;;;;::::0;::::1;1348:10;1334:6;:11;;:24;;;::::0;::::1;1406:6;:13;;;1371:9;1381:10;1371:21;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;548:1;1048:378:::0;:::o;900:138::-;404:11;;;;;;;;;;;390:25;;:10;:25;;;382:34;;;;;;993:1:::1;970:6:::0;:13:::1;977:5;970:13;;;;;;;;;;;;;;;:20;;:24;;;;1026:5;1004:6;:13;1011:5;1004:13;;;;;;;;;;;;;;;:19;;;:27;;;;;;;;;;;;;;;;;;900:138:::0;:::o;1432:392::-;1474:20;1514:21;1538:1;1514:25;;1554:9;1566:1;1554:13;;1549:233;1576:9;:16;;;;1569:4;:23;1549:233;;;1647:16;1619:9;1629:4;1619:15;;;;;;;;;;;;;;;:25;;;:44;1615:167;;;1702:9;1712:4;1702:15;;;;;;;;;;;;;;;:25;;;1683:44;;1763:4;1745:22;;1615:167;1594:6;;;;;;;1549:233;;;;1815:1;1797:16;:19;;1790:27;;;;1432:392;;:::o;34:1792::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "262200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "42177",
								"reqWinner()": "infinite",
								"vote(uint256)": "26534"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34,
									"end": 1826,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "MSTORE"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "MLOAD"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "PUSHSIZE"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "CODESIZE"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "SUB"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "DUP1"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "PUSHSIZE"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "DUP4"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "CODECOPY"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "DUP2"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "DUP2"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "ADD"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "DUP2"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "ADD"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "DUP1"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "DUP1"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "MLOAD"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "ADD"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "SWAP3"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "SWAP2"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 626,
									"end": 636,
									"name": "CALLER"
								},
								{
									"begin": 612,
									"end": 623,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 612,
									"end": 623,
									"name": "DUP1"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "EXP"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "DUP2"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "SLOAD"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "DUP2"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "MUL"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "NOT"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "AND"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "SWAP1"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "DUP4"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "AND"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "MUL"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "OR"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "SWAP1"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "SSTORE"
								},
								{
									"begin": 612,
									"end": 636,
									"name": "POP"
								},
								{
									"begin": 675,
									"end": 676,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 646,
									"end": 652,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "DUP1"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "SWAP1"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "SLOAD"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "SWAP1"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "EXP"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "SWAP1"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "DIV"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 653,
									"end": 664,
									"name": "AND"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "AND"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "AND"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "DUP2"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "MSTORE"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "ADD"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "SWAP1"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "DUP2"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "MSTORE"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "ADD"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 646,
									"end": 665,
									"name": "KECCAK256"
								},
								{
									"begin": 646,
									"end": 672,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 646,
									"end": 672,
									"name": "ADD"
								},
								{
									"begin": 646,
									"end": 676,
									"name": "DUP2"
								},
								{
									"begin": 646,
									"end": 676,
									"name": "SWAP1"
								},
								{
									"begin": 646,
									"end": 676,
									"name": "SSTORE"
								},
								{
									"begin": 646,
									"end": 676,
									"name": "POP"
								},
								{
									"begin": 783,
									"end": 793,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 796,
									"end": 797,
									"name": "DUP1"
								},
								{
									"begin": 783,
									"end": 797,
									"name": "SWAP1"
								},
								{
									"begin": 783,
									"end": 797,
									"name": "POP"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "JUMPDEST"
								},
								{
									"begin": 806,
									"end": 818,
									"name": "DUP2"
								},
								{
									"begin": 799,
									"end": 803,
									"name": "DUP2"
								},
								{
									"begin": 799,
									"end": 818,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 799,
									"end": 818,
									"name": "AND"
								},
								{
									"begin": 799,
									"end": 818,
									"name": "LT"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "ISZERO"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "JUMPI"
								},
								{
									"begin": 841,
									"end": 850,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "MLOAD"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "DUP1"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "ADD"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "MSTORE"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "DUP1"
								},
								{
									"begin": 865,
									"end": 866,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "DUP2"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "MSTORE"
								},
								{
									"begin": 856,
									"end": 867,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SUB"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "MSTORE"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "KECCAK256"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP2"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP2"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SWAP2"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "DUP3"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "MLOAD"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "DUP2"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "SSTORE"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 868,
									"name": "POP"
								},
								{
									"begin": 820,
									"end": 827,
									"name": "DUP1"
								},
								{
									"begin": 820,
									"end": 827,
									"name": "DUP1"
								},
								{
									"begin": 820,
									"end": 827,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 820,
									"end": 827,
									"name": "ADD"
								},
								{
									"begin": 820,
									"end": 827,
									"name": "SWAP2"
								},
								{
									"begin": 820,
									"end": 827,
									"name": "POP"
								},
								{
									"begin": 820,
									"end": 827,
									"name": "POP"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "JUMP"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "JUMPDEST"
								},
								{
									"begin": 778,
									"end": 868,
									"name": "POP"
								},
								{
									"begin": 562,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "CODECOPY"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 34,
									"end": 1826,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1e8696a5592315ad506f6fd012c78d5dc6bf6f39d5b70636af6dc836e20d7d264736f6c63430006000033",
									".code": [
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "LT"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "SHR"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "121B93F"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "508B30C9"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "REVERT"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "JUMPDEST"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "ADD"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "SWAP3"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "SWAP2"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "JUMPDEST"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "STOP"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "DUP2"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "ADD"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "DUP1"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "ADD"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "SWAP3"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "SWAP2"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "SWAP1"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "STOP"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "MLOAD"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "DUP3"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "MSTORE"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "ADD"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "SWAP2"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "MLOAD"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "DUP1"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "SWAP2"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "SUB"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "RETURN"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 489,
											"end": 495,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 496,
											"end": 506,
											"name": "CALLER"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "AND"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "AND"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "MSTORE"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "ADD"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "MSTORE"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "ADD"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "KECCAK256"
										},
										{
											"begin": 489,
											"end": 514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 489,
											"end": 514,
											"name": "ADD"
										},
										{
											"begin": 489,
											"end": 514,
											"name": "SLOAD"
										},
										{
											"begin": 489,
											"end": 518,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "MLOAD"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP3"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "SUB"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP3"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "E4B88DE698AFE68A95E7A5A8E4BABA0000000000000000000000000000000000"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "SWAP2"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "MLOAD"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "SWAP2"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "SUB"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "REVERT"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 481,
											"end": 538,
											"name": "JUMPDEST"
										},
										{
											"begin": 1114,
											"end": 1133,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1114,
											"end": 1133,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1114,
											"end": 1133,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1133,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1114,
											"end": 1133,
											"name": "JUMPDEST"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1153,
											"name": "CALLER"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "KECCAK256"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "MLOAD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP1"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SLOAD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SLOAD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "EXP"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DIV"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "AND"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ISZERO"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP3"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "ADD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SLOAD"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "MSTORE"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1154,
											"name": "POP"
										},
										{
											"begin": 1183,
											"end": 1189,
											"name": "DUP1"
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "ADD"
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "MLOAD"
										},
										{
											"begin": 1182,
											"end": 1195,
											"name": "ISZERO"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "JUMPI"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "MLOAD"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "MSTORE"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP1"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP1"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP3"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "SUB"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP3"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "MSTORE"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "MSTORE"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP1"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "E5B7B2E7BB8FE68A95E8BF87E7A5A8E4BA860000000000000000000000000000"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "MSTORE"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "SWAP2"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "MLOAD"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "DUP1"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "SWAP2"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "SUB"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "REVERT"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1173,
											"end": 1217,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1250,
											"end": 1266,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1266,
											"name": "SLOAD"
										},
										{
											"begin": 1250,
											"end": 1266,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1266,
											"name": "POP"
										},
										{
											"begin": 1237,
											"end": 1247,
											"name": "DUP3"
										},
										{
											"begin": 1237,
											"end": 1266,
											"name": "LT"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "JUMPI"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "MLOAD"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP3"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "SUB"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP3"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "E6B2A1E69C89E8AFA5E98089E9A1B90000000000000000000000000000000000"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP2"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "MSTORE"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "SWAP2"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "POP"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "MLOAD"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "DUP1"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "SWAP2"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "SUB"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "SWAP1"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "REVERT"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1285,
											"name": "JUMPDEST"
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP2"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "ADD"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "SWAP1"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "ISZERO"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "ISZERO"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "SWAP1"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "ISZERO"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "ISZERO"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "MSTORE"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "DUP2"
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP2"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "DUP2"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "DUP2"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "MSTORE"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "DUP1"
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "MLOAD"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "DUP4"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "DUP2"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "SLOAD"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "DUP2"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "LT"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "JUMPI"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "INVALID"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "JUMPDEST"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "SWAP1"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "MSTORE"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "KECCAK256"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "ADD"
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "ADD"
										},
										{
											"begin": 1371,
											"end": 1402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "DUP3"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "DUP3"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "SLOAD"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "ADD"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "SWAP3"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "POP"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "POP"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "DUP2"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "SWAP1"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "SSTORE"
										},
										{
											"begin": 1371,
											"end": 1419,
											"name": "POP"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1426,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "SLOAD"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "EXP"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "DIV"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 415,
											"name": "AND"
										},
										{
											"begin": 390,
											"end": 415,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 390,
											"end": 415,
											"name": "AND"
										},
										{
											"begin": 390,
											"end": 400,
											"name": "CALLER"
										},
										{
											"begin": 390,
											"end": 415,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 390,
											"end": 415,
											"name": "AND"
										},
										{
											"begin": 390,
											"end": 415,
											"name": "EQ"
										},
										{
											"begin": 382,
											"end": 416,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 382,
											"end": 416,
											"name": "JUMPI"
										},
										{
											"begin": 382,
											"end": 416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 382,
											"end": 416,
											"name": "DUP1"
										},
										{
											"begin": 382,
											"end": 416,
											"name": "REVERT"
										},
										{
											"begin": 382,
											"end": 416,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 382,
											"end": 416,
											"name": "JUMPDEST"
										},
										{
											"begin": 993,
											"end": 994,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 977,
											"end": 982,
											"name": "DUP4"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "AND"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "AND"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "MSTORE"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "MSTORE"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 983,
											"name": "KECCAK256"
										},
										{
											"begin": 970,
											"end": 990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 970,
											"end": 990,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "SWAP1"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "SSTORE"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP4"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "AND"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "SWAP1"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "DUP2"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "MSTORE"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "ADD"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1017,
											"name": "KECCAK256"
										},
										{
											"begin": 1004,
											"end": 1023,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1004,
											"end": 1023,
											"name": "ADD"
										},
										{
											"begin": 1004,
											"end": 1023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "EXP"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP2"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SLOAD"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP2"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "MUL"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "NOT"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "AND"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SWAP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "DUP4"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "ISZERO"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "ISZERO"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "MUL"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "OR"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SWAP1"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SSTORE"
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "POP"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 900,
											"end": 1038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 1474,
											"end": 1494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1535,
											"name": "DUP1"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1539,
											"name": "POP"
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "DUP1"
										},
										{
											"begin": 1554,
											"end": 1567,
											"name": "SWAP1"
										},
										{
											"begin": 1554,
											"end": 1567,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "JUMPDEST"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "SLOAD"
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1569,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1569,
											"end": 1592,
											"name": "LT"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "ISZERO"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "JUMPI"
										},
										{
											"begin": 1647,
											"end": 1663,
											"name": "DUP2"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1629,
											"end": 1633,
											"name": "DUP3"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "DUP2"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "SLOAD"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "DUP2"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "LT"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "JUMPI"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "INVALID"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "JUMPDEST"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "SWAP1"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "MSTORE"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "KECCAK256"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "ADD"
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "ADD"
										},
										{
											"begin": 1619,
											"end": 1644,
											"name": "SLOAD"
										},
										{
											"begin": 1619,
											"end": 1663,
											"name": "GT"
										},
										{
											"begin": 1615,
											"end": 1782,
											"name": "ISZERO"
										},
										{
											"begin": 1615,
											"end": 1782,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1615,
											"end": 1782,
											"name": "JUMPI"
										},
										{
											"begin": 1702,
											"end": 1711,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1712,
											"end": 1716,
											"name": "DUP2"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "DUP2"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "SLOAD"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "DUP2"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "LT"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "JUMPI"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "INVALID"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "JUMPDEST"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "SWAP1"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "MSTORE"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "KECCAK256"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "ADD"
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "ADD"
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "SLOAD"
										},
										{
											"begin": 1683,
											"end": 1727,
											"name": "SWAP2"
										},
										{
											"begin": 1683,
											"end": 1727,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1767,
											"name": "DUP1"
										},
										{
											"begin": 1745,
											"end": 1767,
											"name": "SWAP3"
										},
										{
											"begin": 1745,
											"end": 1767,
											"name": "POP"
										},
										{
											"begin": 1615,
											"end": 1782,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1615,
											"end": 1782,
											"name": "JUMPDEST"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP1"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP1"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "ADD"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "SWAP2"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "POP"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "POP"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "JUMP"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "JUMPDEST"
										},
										{
											"begin": 1549,
											"end": 1782,
											"name": "POP"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1816,
											"name": "LT"
										},
										{
											"begin": 1797,
											"end": 1816,
											"name": "ISZERO"
										},
										{
											"begin": 1790,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1790,
											"end": 1817,
											"name": "JUMPI"
										},
										{
											"begin": 1790,
											"end": 1817,
											"name": "INVALID"
										},
										{
											"begin": 1790,
											"end": 1817,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1790,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 1432,
											"end": 1824,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "ISZERO"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "ISZERO"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 34,
											"end": 1826,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"reqWinner()": "508b30c9",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numProposals\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reqWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toProposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BallotV4.sol\":\"Ballot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV4.sol\":{\"keccak256\":\"0xb0d969905c856dc75775457c46cadfe58cf05cd22f5dcdb61b7a162977366076\",\"urls\":[\"bzz-raw://52d9f31ec32be557a284220f1a58262fcbe8a94fd1fb0d42a575f861f2cba60c\",\"dweb:/ipfs/QmeGw7dp8NqV5CEUdP9Jz7Dzw2hFCPRFazD3yEDAmdyNco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "BallotV4.sol:Ballot",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 17,
								"contract": "BallotV4.sol:Ballot",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)8_storage)"
							},
							{
								"astId": 20,
								"contract": "BallotV4.sol:Ballot",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)11_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)11_storage)dyn_storage": {
								"base": "t_struct(Proposal)11_storage",
								"encoding": "dynamic_array",
								"label": "struct Ballot.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Ballot.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)8_storage"
							},
							"t_struct(Proposal)11_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Proposal",
								"members": [
									{
										"astId": 10,
										"contract": "BallotV4.sol:Ballot",
										"label": "voteCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Voter)8_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "BallotV4.sol:Ballot",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "BallotV4.sol:Ballot",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "BallotV4.sol:Ballot",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"BallotV4.sol": {
				"ast": {
					"absolutePath": "BallotV4.sol",
					"exportedSymbols": {
						"Ballot": [
							203
						]
					},
					"id": 204,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 203,
							"linearizedBaseContracts": [
								203
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "101:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "101:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "122:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "122:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "142:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "142:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 203,
									"src": "57:101:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 11,
											"src": "207:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "207:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 203,
									"src": "163:65:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 203,
									"src": "234:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "234:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 203,
									"src": "259:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "267:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "259:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "278:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 203,
									"src": "299:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "299:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "299:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "381:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 23,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "390:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "390:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 25,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "404:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "390:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															221,
															222
														],
														"referencedDeclaration": 221,
														"src": "382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "382:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "382:34:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "424:1:0"
											}
										]
									},
									"documentation": null,
									"id": 31,
									"name": "onlyChair",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:0"
									},
									"src": "354:79:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "471:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 34,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "489:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 37,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 35,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "496:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 36,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "496:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "489:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$8_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "489:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "517:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "489:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e4b88de698afe68a95e7a5a8e4baba",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "520:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_883abb0905d355a9c13a9e5cce0ee8e4f376a7c7715073e5f7daa10b7ef14c78",
																"typeString": "literal_string \"不是投票人\""
															},
															"value": "不是投票人"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_883abb0905d355a9c13a9e5cce0ee8e4f376a7c7715073e5f7daa10b7ef14c78",
																"typeString": "literal_string \"不是投票人\""
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															221,
															222
														],
														"referencedDeclaration": 222,
														"src": "481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "481:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "481:57:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "548:1:0"
											}
										]
									},
									"documentation": null,
									"id": 46,
									"name": "validVoter",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:0"
									},
									"src": "445:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "602:282:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 51,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "612:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 52,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "626:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "612:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "612:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "646:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 58,
															"indexExpression": {
																"argumentTypes": null,
																"id": 57,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "653:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "646:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "646:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "675:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "646:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "646:30:0"
											},
											{
												"body": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "865:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 76,
																	"name": "Proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "856:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Proposal_$11_storage_ptr_$",
																		"typeString": "type(struct Ballot.Proposal storage pointer)"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "856:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_memory",
																	"typeString": "struct Ballot.Proposal memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Proposal_$11_memory",
																	"typeString": "struct Ballot.Proposal memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 73,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "841:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "841:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$11_storage_$returns$__$",
																"typeString": "function (struct Ballot.Proposal storage ref)"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "841:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 80,
													"nodeType": "ExpressionStatement",
													"src": "841:27:0"
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "799:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "806:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "799:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"initializationExpression": {
													"assignments": [
														64
													],
													"declarations": [
														{
															"constant": false,
															"id": 64,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 81,
															"src": "783:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 63,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "783:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 66,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "796:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "783:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "820:7:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 70,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "820:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 72,
													"nodeType": "ExpressionStatement",
													"src": "820:7:0"
												},
												"nodeType": "ForStatement",
												"src": "778:90:0"
											}
										]
									},
									"documentation": null,
									"id": 83,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"name": "numProposals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "575:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "574:19:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:0:0"
									},
									"scope": 203,
									"src": "562:322:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "951:87:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "970:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 92,
															"indexExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "977:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "970:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "970:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "993:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "970:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "970:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 99,
															"indexExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1011:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1004:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1004:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1026:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1004:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1004:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4420e486",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 88,
											"modifierName": {
												"argumentTypes": null,
												"id": 87,
												"name": "onlyChair",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 31,
												"src": "941:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "941:9:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "918:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "917:15:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:0"
									},
									"scope": 203,
									"src": "900:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1097:329:0",
										"statements": [
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 154,
														"src": "1114:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 112,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1136:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 117,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 115,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "1143:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1143:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1136:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1114:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1182:13:0",
															"subExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 120,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "1183:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																		"typeString": "struct Ballot.Voter memory"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1183:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e5b7b2e7bb8fe68a95e8bf87e7a5a8e4ba86",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e24d81cc960fb749fa130e29407219f29878ce1aa1aab048c1babc0b0227b57a",
																"typeString": "literal_string \"已经投过票了\""
															},
															"value": "已经投过票了"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e24d81cc960fb749fa130e29407219f29878ce1aa1aab048c1babc0b0227b57a",
																"typeString": "literal_string \"已经投过票了\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															221,
															222
														],
														"referencedDeclaration": 222,
														"src": "1173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1173:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1173:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 127,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "1237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 128,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1250:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1250:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1237:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e6b2a1e69c89e8afa5e98089e9a1b9",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c65fbb3ffbfb819c45b7989ae5b3e275470b4a5b67d36789ff284070f214bc4",
																"typeString": "literal_string \"没有该选项\""
															},
															"value": "没有该选项"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c65fbb3ffbfb819c45b7989ae5b3e275470b4a5b67d36789ff284070f214bc4",
																"typeString": "literal_string \"没有该选项\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															221,
															222
														],
														"referencedDeclaration": 222,
														"src": "1228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1228:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1228:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 134,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct Ballot.Voter memory"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1305:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1320:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1305:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1305:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 140,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1334:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct Ballot.Voter memory"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 143,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1348:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1334:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1334:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1371:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 148,
															"indexExpression": {
																"argumentTypes": null,
																"id": 147,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "1381:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1371:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1371:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 150,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct Ballot.Voter memory"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1406:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1371:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1371:48:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0121b93f",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 110,
											"modifierName": {
												"argumentTypes": null,
												"id": 109,
												"name": "validVoter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 46,
												"src": "1087:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1087:10:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "1062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1062:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1061:17:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:0:0"
									},
									"scope": 203,
									"src": "1048:378:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "1496:328:0",
										"statements": [
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 201,
														"src": "1514:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 160,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1514:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1538:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1514:25:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 175,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1619:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 177,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 176,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "1629:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1619:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1619:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1647:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1619:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 193,
													"nodeType": "IfStatement",
													"src": "1615:167:0",
													"trueBody": {
														"id": 192,
														"nodeType": "Block",
														"src": "1665:117:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 181,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "1683:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 182,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "1702:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 184,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 183,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 165,
																				"src": "1712:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1702:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1702:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1683:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 187,
																"nodeType": "ExpressionStatement",
																"src": "1683:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 188,
																		"name": "winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "1745:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 189,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "1763:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1745:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 191,
																"nodeType": "ExpressionStatement",
																"src": "1745:22:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1569:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 169,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1576:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1576:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1569:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"initializationExpression": {
													"assignments": [
														165
													],
													"declarations": [
														{
															"constant": false,
															"id": 165,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 194,
															"src": "1554:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 164,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1554:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 167,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1566:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1554:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1594:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 172,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1594:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ExpressionStatement",
													"src": "1594:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1549:233:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 196,
																"name": "winningVoteCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "1797:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1815:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1797:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 195,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "1790:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1790:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "508b30c9",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reqWinner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1450:2:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "1474:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1474:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1473:22:0"
									},
									"scope": 203,
									"src": "1432:392:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 204,
							"src": "34:1792:0"
						}
					],
					"src": "0:1826:0"
				},
				"id": 0
			}
		}
	}
}