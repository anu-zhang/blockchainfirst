{
	"id": "4165ca5c42561a32be8d051ca618b1df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"BindAction.sol": {
				"content": "pragma solidity >=0.4.22 <=0.6.0;\n\ncontract BlindAuction {\n\n    struct  Bid {                   \n        bytes32 blindedBid;//盲拍价格\n        uint deposit;//保证金\n    }\n\n    // state will be set by beneficiary  \n    enum  Phase {Init, Bidding, Reveal, Done}  \n    Phase public state = Phase.Init; \n\n    address payable beneficiary; //owner  \n    mapping(address => Bid) public bids;  \n\n\n    address public highestBidder; \n    uint public highestBid = 0;   \n    \n    mapping(address => uint) public depositReturns; \n    //modifiers\n    modifier validPhase(Phase reqPhase) \n    { require(state == reqPhase); \n      _; \n    } \n\n   modifier onlyBeneficiary()\n   { require(msg.sender == beneficiary); \n      _;\n   }\n\nconstructor(  ) public {    \n        beneficiary = msg.sender;\n        state = Phase.Bidding;\n    }\n\n    function changeState(Phase x) public onlyBeneficiary {\n        if (x < state ) revert();\n        state = x;\n    }\n    \n    function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding)\n    {  \n        bids[msg.sender] = Bid({\n            blindedBid: blindBid,\n            deposit: msg.value\n        });\n    }\n    \n    function reveal(uint value, bytes32 secret) public   validPhase(Phase.Reveal){\n        uint refund = 0;\n            Bid storage bidToCheck = bids[msg.sender];\n            if (bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret))) {\n                refund += bidToCheck.deposit;\n                if (bidToCheck.deposit >= value) {\n                    if (placeBid(msg.sender, value))\n                        refund -= value;\n                }\n            }\n            \n        msg.sender.transfer(refund);\n    }\n\n    function placeBid(address bidder, uint value) internal \n            returns (bool success)\n    {\n        if (value <= highestBid) {\n            return false;\n        }\n        if (highestBidder != address(0)) {\n            // Refund the previously highest bidder.\n            depositReturns[highestBidder] += highestBid;\n        }\n        highestBid = value;\n        highestBidder = bidder;\n        return true;\n    }\n\n\n    // Withdraw a non-winning bid\n    function withdraw() public {   \n        uint amount = depositReturns[msg.sender];\n        require (amount > 0);\n        depositReturns[msg.sender] = 0;\n        msg.sender.transfer(amount);\n        }\n    \n    \n    //End the auction and send the highest bid to the beneficiary.\n    function auctionEnd() public  validPhase(Phase.Done) \n    {\n        beneficiary.transfer(highestBid);\n    }\n}\n\n    \n    \n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"BindAction.sol": {
				"BlindAuction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "auctionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "blindBid",
									"type": "bytes32"
								}
							],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bids",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "blindedBid",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "deposit",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum BlindAuction.Phase",
									"name": "x",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositReturns",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBidder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "secret",
									"type": "bytes32"
								}
							],
							"name": "reveal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum BlindAuction.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BindAction.sol\":35:2531  contract BlindAuction {... */\n  mstore(0x40, 0x80)\n    /* \"BindAction.sol\":294:304  Phase.Init */\n  0x00\n    /* \"BindAction.sol\":273:304  Phase public state = Phase.Init */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BindAction.sol\":460:461  0 */\n  0x00\n    /* \"BindAction.sol\":435:461  uint public highestBid = 0 */\n  0x03\n  sstore\n    /* \"BindAction.sol\":721:820  constructor(  ) public {    ... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"BindAction.sol\":721:820  constructor(  ) public {    ... */\n  pop\n    /* \"BindAction.sol\":772:782  msg.sender */\n  caller\n    /* \"BindAction.sol\":758:769  beneficiary */\n  0x00\n  0x01\n    /* \"BindAction.sol\":758:782  beneficiary = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BindAction.sol\":800:813  Phase.Bidding */\n  0x01\n    /* \"BindAction.sol\":792:797  state */\n  0x00\n  dup1\n    /* \"BindAction.sol\":792:813  state = Phase.Bidding */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_5\n  jumpi\n  invalid\ntag_5:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BindAction.sol\":35:2531  contract BlindAuction {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BindAction.sol\":35:2531  contract BlindAuction {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x62ea82db\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x62ea82db\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x91f90157\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x957bb1e0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd57bde79\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x268f1153\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2a24f46c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b6217f0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4036778f\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"BindAction.sol\":826:939  function changeState(Phase x) public onlyBeneficiary {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"BindAction.sol\":826:939  function changeState(Phase x) public onlyBeneficiary {... */\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"BindAction.sol\":826:939  function changeState(Phase x) public onlyBeneficiary {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"BindAction.sol\":2422:2529  function auctionEnd() public  validPhase(Phase.Done) ... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"BindAction.sol\":2422:2529  function auctionEnd() public  validPhase(Phase.Done) ... */\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"BindAction.sol\":475:521  mapping(address => uint) public depositReturns */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"BindAction.sol\":475:521  mapping(address => uint) public depositReturns */\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"BindAction.sol\":475:521  mapping(address => uint) public depositReturns */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BindAction.sol\":2142:2340  function withdraw() public {   ... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"BindAction.sol\":2142:2340  function withdraw() public {   ... */\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"BindAction.sol\":1154:1678  function reveal(uint value, bytes32 secret) public   validPhase(Phase.Reveal){... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"BindAction.sol\":1154:1678  function reveal(uint value, bytes32 secret) public   validPhase(Phase.Reveal){... */\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"BindAction.sol\":1154:1678  function reveal(uint value, bytes32 secret) public   validPhase(Phase.Reveal){... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"BindAction.sol\":355:390  mapping(address => Bid) public bids */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"BindAction.sol\":355:390  mapping(address => Bid) public bids */\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"BindAction.sol\":355:390  mapping(address => Bid) public bids */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BindAction.sol\":400:428  address public highestBidder */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"BindAction.sol\":400:428  address public highestBidder */\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BindAction.sol\":949:1144  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding)... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"BindAction.sol\":949:1144  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"BindAction.sol\":273:304  Phase public state = Phase.Init */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n        /* \"BindAction.sol\":273:304  Phase public state = Phase.Init */\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BindAction.sol\":435:461  uint public highestBid = 0 */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"BindAction.sol\":435:461  uint public highestBid = 0 */\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BindAction.sol\":826:939  function changeState(Phase x) public onlyBeneficiary {... */\n    tag_16:\n        /* \"BindAction.sol\":691:702  beneficiary */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":677:702  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":677:687  msg.sender */\n      caller\n        /* \"BindAction.sol\":677:702  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BindAction.sol\":669:703  require(msg.sender == beneficiary) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"BindAction.sol\":897:902  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BindAction.sol\":893:902  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n        /* \"BindAction.sol\":893:894  x */\n      dup2\n        /* \"BindAction.sol\":893:902  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      lt\n        /* \"BindAction.sol\":889:913  if (x < state ) revert() */\n      iszero\n      tag_53\n      jumpi\n        /* \"BindAction.sol\":905:913  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BindAction.sol\":889:913  if (x < state ) revert() */\n    tag_53:\n        /* \"BindAction.sol\":931:932  x */\n      dup1\n        /* \"BindAction.sol\":923:928  state */\n      0x00\n      dup1\n        /* \"BindAction.sol\":923:932  state = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_54\n      jumpi\n      invalid\n    tag_54:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BindAction.sol\":826:939  function changeState(Phase x) public onlyBeneficiary {... */\n      pop\n      jump\t// out\n        /* \"BindAction.sol\":2422:2529  function auctionEnd() public  validPhase(Phase.Done) ... */\n    tag_19:\n        /* \"BindAction.sol\":2463:2473  Phase.Done */\n      0x03\n        /* \"BindAction.sol\":604:612  reqPhase */\n      dup1\n        /* \"BindAction.sol\":595:612  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_56\n      jumpi\n      invalid\n    tag_56:\n        /* \"BindAction.sol\":595:600  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BindAction.sol\":595:612  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      eq\n        /* \"BindAction.sol\":587:613  require(state == reqPhase) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"BindAction.sol\":2490:2501  beneficiary */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":2490:2510  beneficiary.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":2490:2522  beneficiary.transfer(highestBid) */\n      0x08fc\n        /* \"BindAction.sol\":2511:2521  highestBid */\n      sload(0x03)\n        /* \"BindAction.sol\":2490:2522  beneficiary.transfer(highestBid) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"BindAction.sol\":2490:2522  beneficiary.transfer(highestBid) */\n      pop\n        /* \"BindAction.sol\":2422:2529  function auctionEnd() public  validPhase(Phase.Done) ... */\n      pop\n      jump\t// out\n        /* \"BindAction.sol\":475:521  mapping(address => uint) public depositReturns */\n    tag_23:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"BindAction.sol\":2142:2340  function withdraw() public {   ... */\n    tag_26:\n        /* \"BindAction.sol\":2182:2193  uint amount */\n      0x00\n        /* \"BindAction.sol\":2196:2210  depositReturns */\n      0x04\n        /* \"BindAction.sol\":2196:2222  depositReturns[msg.sender] */\n      0x00\n        /* \"BindAction.sol\":2211:2221  msg.sender */\n      caller\n        /* \"BindAction.sol\":2196:2222  depositReturns[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BindAction.sol\":2182:2222  uint amount = depositReturns[msg.sender] */\n      swap1\n      pop\n        /* \"BindAction.sol\":2250:2251  0 */\n      0x00\n        /* \"BindAction.sol\":2241:2247  amount */\n      dup2\n        /* \"BindAction.sol\":2241:2251  amount > 0 */\n      gt\n        /* \"BindAction.sol\":2232:2252  require (amount > 0) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"BindAction.sol\":2291:2292  0 */\n      0x00\n        /* \"BindAction.sol\":2262:2276  depositReturns */\n      0x04\n        /* \"BindAction.sol\":2262:2288  depositReturns[msg.sender] */\n      0x00\n        /* \"BindAction.sol\":2277:2287  msg.sender */\n      caller\n        /* \"BindAction.sol\":2262:2288  depositReturns[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BindAction.sol\":2262:2292  depositReturns[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BindAction.sol\":2302:2312  msg.sender */\n      caller\n        /* \"BindAction.sol\":2302:2321  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":2302:2329  msg.sender.transfer(amount) */\n      0x08fc\n        /* \"BindAction.sol\":2322:2328  amount */\n      dup3\n        /* \"BindAction.sol\":2302:2329  msg.sender.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"BindAction.sol\":2302:2329  msg.sender.transfer(amount) */\n      pop\n        /* \"BindAction.sol\":2142:2340  function withdraw() public {   ... */\n      pop\n      jump\t// out\n        /* \"BindAction.sol\":1154:1678  function reveal(uint value, bytes32 secret) public   validPhase(Phase.Reveal){... */\n    tag_30:\n        /* \"BindAction.sol\":1218:1230  Phase.Reveal */\n      0x02\n        /* \"BindAction.sol\":604:612  reqPhase */\n      dup1\n        /* \"BindAction.sol\":595:612  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_67\n      jumpi\n      invalid\n    tag_67:\n        /* \"BindAction.sol\":595:600  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BindAction.sol\":595:612  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_68\n      jumpi\n      invalid\n    tag_68:\n      eq\n        /* \"BindAction.sol\":587:613  require(state == reqPhase) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"BindAction.sol\":1241:1252  uint refund */\n      0x00\n        /* \"BindAction.sol\":1255:1256  0 */\n      dup1\n        /* \"BindAction.sol\":1241:1256  uint refund = 0 */\n      swap1\n      pop\n        /* \"BindAction.sol\":1270:1292  Bid storage bidToCheck */\n      0x00\n        /* \"BindAction.sol\":1295:1299  bids */\n      0x01\n        /* \"BindAction.sol\":1295:1311  bids[msg.sender] */\n      0x00\n        /* \"BindAction.sol\":1300:1310  msg.sender */\n      caller\n        /* \"BindAction.sol\":1295:1311  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BindAction.sol\":1270:1311  Bid storage bidToCheck = bids[msg.sender] */\n      swap1\n      pop\n        /* \"BindAction.sol\":1381:1386  value */\n      dup5\n        /* \"BindAction.sol\":1388:1394  secret */\n      dup5\n        /* \"BindAction.sol\":1364:1395  abi.encodePacked(value, secret) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"BindAction.sol\":1364:1395  abi.encodePacked(value, secret) */\n      swap1\n      0x40\n      mstore\n        /* \"BindAction.sol\":1354:1396  keccak256(abi.encodePacked(value, secret)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"BindAction.sol\":1329:1339  bidToCheck */\n      dup2\n        /* \"BindAction.sol\":1329:1350  bidToCheck.blindedBid */\n      0x00\n      add\n      sload\n        /* \"BindAction.sol\":1329:1396  bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret)) */\n      eq\n        /* \"BindAction.sol\":1325:1622  if (bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret))) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"BindAction.sol\":1426:1436  bidToCheck */\n      dup1\n        /* \"BindAction.sol\":1426:1444  bidToCheck.deposit */\n      0x01\n      add\n      sload\n        /* \"BindAction.sol\":1416:1444  refund += bidToCheck.deposit */\n      dup3\n      add\n      swap2\n      pop\n        /* \"BindAction.sol\":1488:1493  value */\n      dup5\n        /* \"BindAction.sol\":1466:1476  bidToCheck */\n      dup2\n        /* \"BindAction.sol\":1466:1484  bidToCheck.deposit */\n      0x01\n      add\n      sload\n        /* \"BindAction.sol\":1466:1493  bidToCheck.deposit >= value */\n      lt\n        /* \"BindAction.sol\":1462:1608  if (bidToCheck.deposit >= value) {... */\n      tag_72\n      jumpi\n        /* \"BindAction.sol\":1521:1548  placeBid(msg.sender, value) */\n      tag_73\n        /* \"BindAction.sol\":1530:1540  msg.sender */\n      caller\n        /* \"BindAction.sol\":1542:1547  value */\n      dup7\n        /* \"BindAction.sol\":1521:1529  placeBid */\n      tag_74\n        /* \"BindAction.sol\":1521:1548  placeBid(msg.sender, value) */\n      jump\t// in\n    tag_73:\n        /* \"BindAction.sol\":1517:1589  if (placeBid(msg.sender, value))... */\n      iszero\n      tag_75\n      jumpi\n        /* \"BindAction.sol\":1584:1589  value */\n      dup5\n        /* \"BindAction.sol\":1574:1589  refund -= value */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"BindAction.sol\":1517:1589  if (placeBid(msg.sender, value))... */\n    tag_75:\n        /* \"BindAction.sol\":1462:1608  if (bidToCheck.deposit >= value) {... */\n    tag_72:\n        /* \"BindAction.sol\":1325:1622  if (bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret))) {... */\n    tag_71:\n        /* \"BindAction.sol\":1644:1654  msg.sender */\n      caller\n        /* \"BindAction.sol\":1644:1663  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":1644:1671  msg.sender.transfer(refund) */\n      0x08fc\n        /* \"BindAction.sol\":1664:1670  refund */\n      dup4\n        /* \"BindAction.sol\":1644:1671  msg.sender.transfer(refund) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n        /* \"BindAction.sol\":1644:1671  msg.sender.transfer(refund) */\n      pop\n        /* \"BindAction.sol\":622:623  _ */\n      pop\n      pop\n        /* \"BindAction.sol\":1154:1678  function reveal(uint value, bytes32 secret) public   validPhase(Phase.Reveal){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BindAction.sol\":355:390  mapping(address => Bid) public bids */\n    tag_34:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"BindAction.sol\":400:428  address public highestBidder */\n    tag_37:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BindAction.sol\":949:1144  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding)... */\n    tag_40:\n        /* \"BindAction.sol\":1006:1019  Phase.Bidding */\n      0x01\n        /* \"BindAction.sol\":604:612  reqPhase */\n      dup1\n        /* \"BindAction.sol\":595:612  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_79\n      jumpi\n      invalid\n    tag_79:\n        /* \"BindAction.sol\":595:600  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BindAction.sol\":595:612  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_80\n      jumpi\n      invalid\n    tag_80:\n      eq\n        /* \"BindAction.sol\":587:613  require(state == reqPhase) */\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n        /* \"BindAction.sol\":1056:1137  Bid({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"BindAction.sol\":1086:1094  blindBid */\n      dup4\n        /* \"BindAction.sol\":1056:1137  Bid({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BindAction.sol\":1117:1126  msg.value */\n      callvalue\n        /* \"BindAction.sol\":1056:1137  Bid({... */\n      dup2\n      mstore\n      pop\n        /* \"BindAction.sol\":1037:1041  bids */\n      0x01\n        /* \"BindAction.sol\":1037:1053  bids[msg.sender] */\n      0x00\n        /* \"BindAction.sol\":1042:1052  msg.sender */\n      caller\n        /* \"BindAction.sol\":1037:1053  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BindAction.sol\":1037:1137  bids[msg.sender] = Bid({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"BindAction.sol\":949:1144  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding)... */\n      pop\n      pop\n      jump\t// out\n        /* \"BindAction.sol\":273:304  Phase public state = Phase.Init */\n    tag_43:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"BindAction.sol\":435:461  uint public highestBid = 0 */\n    tag_47:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"BindAction.sol\":1684:2101  function placeBid(address bidder, uint value) internal ... */\n    tag_74:\n        /* \"BindAction.sol\":1761:1773  bool success */\n      0x00\n        /* \"BindAction.sol\":1802:1812  highestBid */\n      sload(0x03)\n        /* \"BindAction.sol\":1793:1798  value */\n      dup3\n        /* \"BindAction.sol\":1793:1812  value <= highestBid */\n      gt\n        /* \"BindAction.sol\":1789:1851  if (value <= highestBid) {... */\n      tag_84\n      jumpi\n        /* \"BindAction.sol\":1835:1840  false */\n      0x00\n        /* \"BindAction.sol\":1828:1840  return false */\n      swap1\n      pop\n      jump(tag_83)\n        /* \"BindAction.sol\":1789:1851  if (value <= highestBid) {... */\n    tag_84:\n        /* \"BindAction.sol\":1889:1890  0 */\n      0x00\n        /* \"BindAction.sol\":1864:1891  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":1864:1877  highestBidder */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":1864:1891  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BindAction.sol\":1860:2014  if (highestBidder != address(0)) {... */\n      tag_85\n      jumpi\n        /* \"BindAction.sol\":1993:2003  highestBid */\n      sload(0x03)\n        /* \"BindAction.sol\":1960:1974  depositReturns */\n      0x04\n        /* \"BindAction.sol\":1960:1989  depositReturns[highestBidder] */\n      0x00\n        /* \"BindAction.sol\":1975:1988  highestBidder */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BindAction.sol\":1960:1989  depositReturns[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"BindAction.sol\":1960:2003  depositReturns[highestBidder] += highestBid */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BindAction.sol\":1860:2014  if (highestBidder != address(0)) {... */\n    tag_85:\n        /* \"BindAction.sol\":2036:2041  value */\n      dup2\n        /* \"BindAction.sol\":2023:2033  highestBid */\n      0x03\n        /* \"BindAction.sol\":2023:2041  highestBid = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BindAction.sol\":2067:2073  bidder */\n      dup3\n        /* \"BindAction.sol\":2051:2064  highestBidder */\n      0x02\n      0x00\n        /* \"BindAction.sol\":2051:2073  highestBidder = bidder */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BindAction.sol\":2090:2094  true */\n      0x01\n        /* \"BindAction.sol\":2083:2094  return true */\n      swap1\n      pop\n        /* \"BindAction.sol\":1684:2101  function placeBid(address bidder, uint value) internal ... */\n    tag_83:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203f6d0791c6858cb2c56126f31ff014bbc18c6563b6fc625733a7837ffbd6f4ce64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b0217905550600060035534801561003857600080fd5b5033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000806101000a81548160ff0219169083600381111561009857fe5b02179055506108de806100ac6000396000f3fe6080604052600436106100915760003560e01c806362ea82db1161005957806362ea82db146101ac57806391f9015714610218578063957bb1e01461026f578063c19d93fb1461029d578063d57bde79146102d657610091565b8063268f1153146100965780632a24f46c146100d45780633b6217f0146100eb5780633ccfd60b146101505780634036778f14610167575b600080fd5b3480156100a257600080fd5b506100d2600480360360208110156100b957600080fd5b81019080803560ff169060200190929190505050610301565b005b3480156100e057600080fd5b506100e96103b1565b005b3480156100f757600080fd5b5061013a6004803603602081101561010e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610451565b6040518082815260200191505060405180910390f35b34801561015c57600080fd5b50610165610469565b005b34801561017357600080fd5b506101aa6004803603604081101561018a57600080fd5b810190808035906020019092919080359060200190929190505050610549565b005b3480156101b857600080fd5b506101fb600480360360208110156101cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610676565b604051808381526020018281526020019250505060405180910390f35b34801561022457600080fd5b5061022d61069a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61029b6004803603602081101561028557600080fd5b81019080803590602001909291905050506106c0565b005b3480156102a957600080fd5b506102b2610761565b604051808260038111156102c257fe5b60ff16815260200191505060405180910390f35b3480156102e257600080fd5b506102eb610773565b6040518082815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035b57600080fd5b6000809054906101000a900460ff16600381111561037557fe5b81600381111561038157fe5b101561038c57600080fd5b806000806101000a81548160ff021916908360038111156103a957fe5b021790555050565b60038060038111156103bf57fe5b6000809054906101000a900460ff1660038111156103d957fe5b146103e357600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561044d573d6000803e3d6000fd5b5050565b60046020528060005260406000206000915090505481565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116104ba57600080fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610545573d6000803e3d6000fd5b5050565b600280600381111561055757fe5b6000809054906101000a900460ff16600381111561057157fe5b1461057b57600080fd5b60008090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208160000154141561062857806001015482019150848160010154106106275761061b3386610779565b156106265784820391505b5b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561066e573d6000803e3d6000fd5b505050505050565b60016020528060005260406000206000915090508060000154908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060038111156106ce57fe5b6000809054906101000a900460ff1660038111156106e857fe5b146106f257600080fd5b604051806040016040528083815260200134815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b6000809054906101000a900460ff1681565b60035481565b6000600354821161078d57600090506108a2565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108555760035460046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8160038190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b9291505056fea26469706673582212203f6d0791c6858cb2c56126f31ff014bbc18c6563b6fc625733a7837ffbd6f4ce64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x98 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x8DE DUP1 PUSH2 0xAC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62EA82DB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x957BB1E0 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x2D6 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x268F1153 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x2A24F46C EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3B6217F0 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x4036778F EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x3B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x549 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x375 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x381 JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3BF JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D9 JUMPI INVALID JUMPDEST EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x557 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x571 JUMPI INVALID JUMPDEST EQ PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x628 JUMPI DUP1 PUSH1 0x1 ADD SLOAD DUP3 ADD SWAP2 POP DUP5 DUP2 PUSH1 0x1 ADD SLOAD LT PUSH2 0x627 JUMPI PUSH2 0x61B CALLER DUP7 PUSH2 0x779 JUMP JUMPDEST ISZERO PUSH2 0x626 JUMPI DUP5 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x66E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6CE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6E8 JUMPI INVALID JUMPDEST EQ PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x78D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x855 JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH PUSH14 0x791C6858CB2C56126F31FF014BB 0xC1 DUP13 PUSH6 0x63B6FC625733 0xA7 DUP4 PUSH32 0xFBD6F4CE64736F6C634300060000330000000000000000000000000000000000 ",
							"sourceMap": "35:2496:0:-:0;;;294:10;273:31;;;;;;;;;;;;;;;;;;;;;;;;;;460:1;435:26;;721:99;8:9:-1;5:2;;;30:1;27;20:12;5:2;721:99:0;772:10;758:11;;:24;;;;;;;;;;;;;;;;;;800:13;792:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;35:2496;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100915760003560e01c806362ea82db1161005957806362ea82db146101ac57806391f9015714610218578063957bb1e01461026f578063c19d93fb1461029d578063d57bde79146102d657610091565b8063268f1153146100965780632a24f46c146100d45780633b6217f0146100eb5780633ccfd60b146101505780634036778f14610167575b600080fd5b3480156100a257600080fd5b506100d2600480360360208110156100b957600080fd5b81019080803560ff169060200190929190505050610301565b005b3480156100e057600080fd5b506100e96103b1565b005b3480156100f757600080fd5b5061013a6004803603602081101561010e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610451565b6040518082815260200191505060405180910390f35b34801561015c57600080fd5b50610165610469565b005b34801561017357600080fd5b506101aa6004803603604081101561018a57600080fd5b810190808035906020019092919080359060200190929190505050610549565b005b3480156101b857600080fd5b506101fb600480360360208110156101cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610676565b604051808381526020018281526020019250505060405180910390f35b34801561022457600080fd5b5061022d61069a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61029b6004803603602081101561028557600080fd5b81019080803590602001909291905050506106c0565b005b3480156102a957600080fd5b506102b2610761565b604051808260038111156102c257fe5b60ff16815260200191505060405180910390f35b3480156102e257600080fd5b506102eb610773565b6040518082815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035b57600080fd5b6000809054906101000a900460ff16600381111561037557fe5b81600381111561038157fe5b101561038c57600080fd5b806000806101000a81548160ff021916908360038111156103a957fe5b021790555050565b60038060038111156103bf57fe5b6000809054906101000a900460ff1660038111156103d957fe5b146103e357600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f1935050505015801561044d573d6000803e3d6000fd5b5050565b60046020528060005260406000206000915090505481565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116104ba57600080fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610545573d6000803e3d6000fd5b5050565b600280600381111561055757fe5b6000809054906101000a900460ff16600381111561057157fe5b1461057b57600080fd5b60008090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208160000154141561062857806001015482019150848160010154106106275761061b3386610779565b156106265784820391505b5b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561066e573d6000803e3d6000fd5b505050505050565b60016020528060005260406000206000915090508060000154908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060038111156106ce57fe5b6000809054906101000a900460ff1660038111156106e857fe5b146106f257600080fd5b604051806040016040528083815260200134815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b6000809054906101000a900460ff1681565b60035481565b6000600354821161078d57600090506108a2565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108555760035460046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8160038190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b9291505056fea26469706673582212203f6d0791c6858cb2c56126f31ff014bbc18c6563b6fc625733a7837ffbd6f4ce64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62EA82DB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x957BB1E0 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x2D6 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x268F1153 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x2A24F46C EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3B6217F0 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x4036778F EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x3B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x469 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x549 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x375 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x381 JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3BF JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D9 JUMPI INVALID JUMPDEST EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x557 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x571 JUMPI INVALID JUMPDEST EQ PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x628 JUMPI DUP1 PUSH1 0x1 ADD SLOAD DUP3 ADD SWAP2 POP DUP5 DUP2 PUSH1 0x1 ADD SLOAD LT PUSH2 0x627 JUMPI PUSH2 0x61B CALLER DUP7 PUSH2 0x779 JUMP JUMPDEST ISZERO PUSH2 0x626 JUMPI DUP5 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x66E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6CE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6E8 JUMPI INVALID JUMPDEST EQ PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x78D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x855 JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH PUSH14 0x791C6858CB2C56126F31FF014BB 0xC1 DUP13 PUSH6 0x63B6FC625733 0xA7 DUP4 PUSH32 0xFBD6F4CE64736F6C634300060000330000000000000000000000000000000000 ",
							"sourceMap": "35:2496:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;826:113:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;826:113:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2422:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2422:107:0;;;:::i;:::-;;475:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;475:46:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;475:46:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2142:198;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2142:198:0;;;:::i;:::-;;1154:524;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1154:524:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1154:524:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;355:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:35:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;355:35:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;400:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;949:195;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;949:195:0;;;;;;;;;;;;;;;;;:::i;:::-;;273:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;273:31:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;826:113;691:11;;;;;;;;;;;677:25;;:10;:25;;;669:34;;;;;;897:5:::1;::::0;::::1;;;;;;;;;893:9;;;;;;;;:1;:9;;;;;;;;;889:24;;;905:8;::::0;::::1;889:24;931:1;923:5;::::0;:9:::1;;;;;;;;;;;;;;;;;;;;;;;;826:113:::0;:::o;2422:107::-;2463:10;604:8;595:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;587:26;;;;;;2490:11:::1;;;;;;;;;;;:20;;:32;2511:10;;2490:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2490:32:0;2422:107:::0;:::o;475:46::-;;;;;;;;;;;;;;;;;:::o;2142:198::-;2182:11;2196:14;:26;2211:10;2196:26;;;;;;;;;;;;;;;;2182:40;;2250:1;2241:6;:10;2232:20;;;;;;2291:1;2262:14;:26;2277:10;2262:26;;;;;;;;;;;;;;;:30;;;;2302:10;:19;;:27;2322:6;2302:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2302:27:0;2142:198;:::o;1154:524::-;1218:12;604:8;595:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;587:26;;;;;;1241:11:::1;1255:1:::0;1241:15:::1;;1270:22;1295:4;:16;1300:10;1295:16;;;;;;;;;;;;;;;1270:41;;1381:5;1388:6;1364:31;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1364:31:0;;;1354:42;;;;;;1329:10;:21;;;:67;1325:297;;;1426:10;:18;;;1416:28;;;;1488:5;1466:10;:18;;;:27;1462:146;;1521:27;1530:10;1542:5;1521:8;:27::i;:::-;1517:72;;;1584:5;1574:15;;;;1517:72;1462:146;1325:297;1644:10;:19;;:27;1664:6;1644:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1644:27:0;622:1;;1154:524:::0;;;:::o;355:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;400:28::-;;;;;;;;;;;;;:::o;949:195::-;1006:13;604:8;595:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;587:26;;;;;;1056:81:::1;;;;;;;;1086:8;1056:81;;;;1117:9;1056:81;;::::0;1037:4:::1;:16;1042:10;1037:16;;;;;;;;;;;;;;;:100;;;;;;;;;;;;;;;;;;;949:195:::0;;:::o;273:31::-;;;;;;;;;;;;;:::o;435:26::-;;;;:::o;1684:417::-;1761:12;1802:10;;1793:5;:19;1789:62;;1835:5;1828:12;;;;1789:62;1889:1;1864:27;;:13;;;;;;;;;;;:27;;;1860:154;;1993:10;;1960:14;:29;1975:13;;;;;;;;;;;1960:29;;;;;;;;;;;;;;;;:43;;;;;;;;;;;1860:154;2036:5;2023:10;:18;;;;2067:6;2051:13;;:22;;;;;;;;;;;;;;;;;;2090:4;2083:11;;1684:417;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "454000",
								"executionCost": "68182",
								"totalCost": "522182"
							},
							"external": {
								"auctionEnd()": "infinite",
								"bid(bytes32)": "41363",
								"bids(address)": "2015",
								"changeState(uint8)": "22956",
								"depositReturns(address)": "1214",
								"highestBid()": "1093",
								"highestBidder()": "1075",
								"reveal(uint256,bytes32)": "infinite",
								"state()": "1139",
								"withdraw()": "infinite"
							},
							"internal": {
								"placeBid(address,uint256)": "65171"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 2531,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "MSTORE"
								},
								{
									"begin": 294,
									"end": 304,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "DUP1"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "EXP"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "DUP2"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "SLOAD"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "DUP2"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "MUL"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "NOT"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "AND"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "SWAP1"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "DUP4"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "DUP2"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "GT"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "ISZERO"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "JUMPI"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "INVALID"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "JUMPDEST"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "MUL"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "OR"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "SWAP1"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "SSTORE"
								},
								{
									"begin": 273,
									"end": 304,
									"name": "POP"
								},
								{
									"begin": 460,
									"end": 461,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 435,
									"end": 461,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 435,
									"end": 461,
									"name": "SSTORE"
								},
								{
									"begin": 721,
									"end": 820,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 721,
									"end": 820,
									"name": "POP"
								},
								{
									"begin": 772,
									"end": 782,
									"name": "CALLER"
								},
								{
									"begin": 758,
									"end": 769,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 758,
									"end": 769,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "EXP"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "DUP2"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "SLOAD"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "DUP2"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "MUL"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "NOT"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "AND"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "SWAP1"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "DUP4"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "AND"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "MUL"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "OR"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "SWAP1"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "SSTORE"
								},
								{
									"begin": 758,
									"end": 782,
									"name": "POP"
								},
								{
									"begin": 800,
									"end": 813,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "DUP1"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "EXP"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "DUP2"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "SLOAD"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "DUP2"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "MUL"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "NOT"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "AND"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "SWAP1"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "DUP4"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "DUP2"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "GT"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "ISZERO"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "JUMPI"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "INVALID"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "JUMPDEST"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "MUL"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "OR"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "SWAP1"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "SSTORE"
								},
								{
									"begin": 792,
									"end": 813,
									"name": "POP"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "DUP1"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "CODECOPY"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 35,
									"end": 2531,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f6d0791c6858cb2c56126f31ff014bbc18c6563b6fc625733a7837ffbd6f4ce64736f6c63430006000033",
									".code": [
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "MSTORE"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "LT"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "SHR"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "62EA82DB"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "GT"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "62EA82DB"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "91F90157"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "957BB1E0"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "C19D93FB"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "D57BDE79"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMP"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "2A24F46C"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "3B6217F0"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "4036778F"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 2531,
											"name": "REVERT"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "POP"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "DUP2"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "ADD"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "AND"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "ADD"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "SWAP3"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "SWAP2"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "POP"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "POP"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "POP"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "STOP"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "POP"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "STOP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP2"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "ADD"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "AND"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "ADD"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP3"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP2"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "MLOAD"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP3"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP2"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "MSTORE"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "ADD"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP2"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "MLOAD"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP2"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SUB"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "RETURN"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "JUMPDEST"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "POP"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "JUMPDEST"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "STOP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "DUP2"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "ADD"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "ADD"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP3"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "ADD"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP3"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP2"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "SWAP1"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "STOP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP2"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "ADD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "AND"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "ADD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP3"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP2"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "MLOAD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP4"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP2"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "MSTORE"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "ADD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP3"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP2"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "MSTORE"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "ADD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP3"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "MLOAD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP2"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SUB"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "RETURN"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "MLOAD"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP3"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "AND"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "AND"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP2"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "MSTORE"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "ADD"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "POP"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "MLOAD"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP2"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SUB"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "RETURN"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "SWAP3"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "SWAP2"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "STOP"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "POP"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "MLOAD"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DUP1"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DUP3"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "GT"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "ISZERO"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "JUMPI"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "INVALID"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "AND"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "MSTORE"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "ADD"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SWAP2"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "POP"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "POP"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "MLOAD"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DUP1"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SWAP2"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SUB"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "RETURN"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "POP"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "MLOAD"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "MSTORE"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "ADD"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SWAP2"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "POP"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "POP"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "MLOAD"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SWAP2"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SUB"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "RETURN"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "SLOAD"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "EXP"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "DIV"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 702,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 702,
											"name": "EQ"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "JUMPI"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "DUP1"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "REVERT"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "JUMPDEST"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "DUP1"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "SWAP1"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "SLOAD"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "SWAP1"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "EXP"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "SWAP1"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "DIV"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 897,
											"end": 902,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "GT"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "JUMPI"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "INVALID"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "JUMPDEST"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "GT"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "JUMPI"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "INVALID"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "JUMPDEST"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "LT"
										},
										{
											"begin": 889,
											"end": 913,
											"name": "ISZERO"
										},
										{
											"begin": 889,
											"end": 913,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 889,
											"end": 913,
											"name": "JUMPI"
										},
										{
											"begin": 905,
											"end": 913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1"
										},
										{
											"begin": 905,
											"end": 913,
											"name": "REVERT"
										},
										{
											"begin": 889,
											"end": 913,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 889,
											"end": 913,
											"name": "JUMPDEST"
										},
										{
											"begin": 931,
											"end": 932,
											"name": "DUP1"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP1"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "EXP"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP2"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "SLOAD"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP2"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "MUL"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "NOT"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "SWAP1"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP2"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "GT"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "ISZERO"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "JUMPI"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "INVALID"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "JUMPDEST"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "MUL"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "OR"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "SWAP1"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "SSTORE"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "POP"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "POP"
										},
										{
											"begin": 826,
											"end": 939,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "JUMPDEST"
										},
										{
											"begin": 2463,
											"end": 2473,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 604,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "GT"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "ISZERO"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPI"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "INVALID"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DUP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SLOAD"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "EXP"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DIV"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "GT"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "ISZERO"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPI"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "INVALID"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "JUMPI"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "REVERT"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "SWAP1"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "SLOAD"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "SWAP1"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "EXP"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "SWAP1"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "DIV"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "AND"
										},
										{
											"begin": 2490,
											"end": 2510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2510,
											"name": "AND"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "SLOAD"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "SWAP1"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "DUP2"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "ISZERO"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "MUL"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "SWAP1"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "MLOAD"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "MLOAD"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "DUP1"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "DUP4"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "SUB"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "DUP2"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "DUP6"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "DUP9"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "DUP9"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "CALL"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "SWAP4"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "POP"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "POP"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "POP"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "POP"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2490,
											"end": 2522,
											"name": "POP"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "POP"
										},
										{
											"begin": 2422,
											"end": 2529,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "MSTORE"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "MSTORE"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "KECCAK256"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP2"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "SLOAD"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "DUP2"
										},
										{
											"begin": 475,
											"end": 521,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "JUMPDEST"
										},
										{
											"begin": 2182,
											"end": 2193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2210,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "CALLER"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "AND"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "AND"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "DUP2"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "MSTORE"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "ADD"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "SWAP1"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "DUP2"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "MSTORE"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "ADD"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "KECCAK256"
										},
										{
											"begin": 2196,
											"end": 2222,
											"name": "SLOAD"
										},
										{
											"begin": 2182,
											"end": 2222,
											"name": "SWAP1"
										},
										{
											"begin": 2182,
											"end": 2222,
											"name": "POP"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP2"
										},
										{
											"begin": 2241,
											"end": 2251,
											"name": "GT"
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "JUMPI"
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "REVERT"
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2232,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2287,
											"name": "CALLER"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "AND"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "AND"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "DUP2"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "MSTORE"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "ADD"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP1"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "DUP2"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "MSTORE"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "ADD"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "KECCAK256"
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "SSTORE"
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "POP"
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "CALLER"
										},
										{
											"begin": 2302,
											"end": 2321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2321,
											"name": "AND"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP3"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "SWAP1"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "DUP2"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "ISZERO"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "MUL"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "SWAP1"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "MLOAD"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "MLOAD"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "DUP1"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "DUP4"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "SUB"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "DUP2"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "DUP6"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "DUP9"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "DUP9"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "CALL"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "SWAP4"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "POP"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "POP"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "POP"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "POP"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2302,
											"end": 2329,
											"name": "POP"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "POP"
										},
										{
											"begin": 2142,
											"end": 2340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1218,
											"end": 1230,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 604,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "GT"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "ISZERO"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPI"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "INVALID"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DUP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SLOAD"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "EXP"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DIV"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "GT"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "ISZERO"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPI"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "INVALID"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "JUMPI"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "REVERT"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 1241,
											"end": 1252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1270,
											"end": 1292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1299,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1310,
											"name": "CALLER"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "AND"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "AND"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "DUP2"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "MSTORE"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "DUP2"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "MSTORE"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1311,
											"name": "KECCAK256"
										},
										{
											"begin": 1270,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 1270,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1386,
											"name": "DUP5"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP5"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "ADD"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "DUP4"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "DUP2"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "MSTORE"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "ADD"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "DUP3"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "DUP2"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "MSTORE"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "ADD"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "SWAP3"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1395,
											"name": "MSTORE"
										},
										{
											"begin": 1354,
											"end": 1396,
											"name": "DUP1"
										},
										{
											"begin": 1354,
											"end": 1396,
											"name": "MLOAD"
										},
										{
											"begin": 1354,
											"end": 1396,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1396,
											"name": "ADD"
										},
										{
											"begin": 1354,
											"end": 1396,
											"name": "KECCAK256"
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "DUP2"
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "ADD"
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1396,
											"name": "EQ"
										},
										{
											"begin": 1325,
											"end": 1622,
											"name": "ISZERO"
										},
										{
											"begin": 1325,
											"end": 1622,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1325,
											"end": 1622,
											"name": "JUMPI"
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "ADD"
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "SLOAD"
										},
										{
											"begin": 1416,
											"end": 1444,
											"name": "DUP3"
										},
										{
											"begin": 1416,
											"end": 1444,
											"name": "ADD"
										},
										{
											"begin": 1416,
											"end": 1444,
											"name": "SWAP2"
										},
										{
											"begin": 1416,
											"end": 1444,
											"name": "POP"
										},
										{
											"begin": 1488,
											"end": 1493,
											"name": "DUP5"
										},
										{
											"begin": 1466,
											"end": 1476,
											"name": "DUP2"
										},
										{
											"begin": 1466,
											"end": 1484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1466,
											"end": 1484,
											"name": "ADD"
										},
										{
											"begin": 1466,
											"end": 1484,
											"name": "SLOAD"
										},
										{
											"begin": 1466,
											"end": 1493,
											"name": "LT"
										},
										{
											"begin": 1462,
											"end": 1608,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1462,
											"end": 1608,
											"name": "JUMPI"
										},
										{
											"begin": 1521,
											"end": 1548,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1530,
											"end": 1540,
											"name": "CALLER"
										},
										{
											"begin": 1542,
											"end": 1547,
											"name": "DUP7"
										},
										{
											"begin": 1521,
											"end": 1529,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1521,
											"end": 1548,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1521,
											"end": 1548,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1521,
											"end": 1548,
											"name": "JUMPDEST"
										},
										{
											"begin": 1517,
											"end": 1589,
											"name": "ISZERO"
										},
										{
											"begin": 1517,
											"end": 1589,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1517,
											"end": 1589,
											"name": "JUMPI"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP5"
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "DUP3"
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "SUB"
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "SWAP2"
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "POP"
										},
										{
											"begin": 1517,
											"end": 1589,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1517,
											"end": 1589,
											"name": "JUMPDEST"
										},
										{
											"begin": 1462,
											"end": 1608,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1462,
											"end": 1608,
											"name": "JUMPDEST"
										},
										{
											"begin": 1325,
											"end": 1622,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1325,
											"end": 1622,
											"name": "JUMPDEST"
										},
										{
											"begin": 1644,
											"end": 1654,
											"name": "CALLER"
										},
										{
											"begin": 1644,
											"end": 1663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1663,
											"name": "AND"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP4"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "SWAP1"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "DUP2"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "ISZERO"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "MUL"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "SWAP1"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "MLOAD"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "MLOAD"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "DUP1"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "DUP4"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "SUB"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "DUP2"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "DUP6"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "DUP9"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "DUP9"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "CALL"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "SWAP4"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1644,
											"end": 1671,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "POP"
										},
										{
											"begin": 1154,
											"end": 1678,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "JUMPDEST"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "MSTORE"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "MSTORE"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "KECCAK256"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP2"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "ADD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SLOAD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "ADD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SLOAD"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "POP"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "DUP3"
										},
										{
											"begin": 355,
											"end": 390,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SLOAD"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "EXP"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DIV"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "AND"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "DUP2"
										},
										{
											"begin": 400,
											"end": 428,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1019,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 604,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "GT"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "ISZERO"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPI"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "INVALID"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DUP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SLOAD"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "EXP"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "DIV"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 595,
											"end": 600,
											"name": "AND"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "DUP2"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "GT"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "ISZERO"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPI"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "INVALID"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "EQ"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "JUMPI"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "REVERT"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 587,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "MLOAD"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "MSTORE"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "DUP1"
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "DUP4"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "MSTORE"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1117,
											"end": 1126,
											"name": "CALLVALUE"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "MSTORE"
										},
										{
											"begin": 1056,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1041,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1052,
											"name": "CALLER"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1053,
											"name": "KECCAK256"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "SSTORE"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "DUP3"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "MLOAD"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "SSTORE"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1137,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1144,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DUP1"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SLOAD"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "EXP"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DIV"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "AND"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 304,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 461,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1761,
											"end": 1773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1812,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1802,
											"end": 1812,
											"name": "SLOAD"
										},
										{
											"begin": 1793,
											"end": 1798,
											"name": "DUP3"
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "GT"
										},
										{
											"begin": 1789,
											"end": 1851,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 1789,
											"end": 1851,
											"name": "JUMPI"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1840,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1840,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 1840,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1828,
											"end": 1840,
											"name": "JUMP"
										},
										{
											"begin": 1789,
											"end": 1851,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 1789,
											"end": 1851,
											"name": "JUMPDEST"
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1891,
											"name": "AND"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "SWAP1"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "SLOAD"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "SWAP1"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "EXP"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "SWAP1"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "DIV"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "AND"
										},
										{
											"begin": 1864,
											"end": 1891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1891,
											"name": "AND"
										},
										{
											"begin": 1864,
											"end": 1891,
											"name": "EQ"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPI"
										},
										{
											"begin": 1993,
											"end": 2003,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1993,
											"end": 2003,
											"name": "SLOAD"
										},
										{
											"begin": 1960,
											"end": 1974,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "SWAP1"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "SLOAD"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "SWAP1"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "EXP"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "SWAP1"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "DIV"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "AND"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "MSTORE"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "KECCAK256"
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "DUP3"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "DUP3"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "SLOAD"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "ADD"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "SWAP3"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "DUP2"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "SSTORE"
										},
										{
											"begin": 1960,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1860,
											"end": 2014,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2041,
											"name": "DUP2"
										},
										{
											"begin": 2023,
											"end": 2033,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "DUP2"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "SWAP1"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "SSTORE"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "POP"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "DUP3"
										},
										{
											"begin": 2051,
											"end": 2064,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2051,
											"end": 2064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "EXP"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "DUP2"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "SLOAD"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "DUP2"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "MUL"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "NOT"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "AND"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "SWAP1"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "DUP4"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "AND"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "MUL"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "OR"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "SWAP1"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "SSTORE"
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "POP"
										},
										{
											"begin": 2090,
											"end": 2094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "SWAP1"
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "SWAP3"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "SWAP2"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 2101,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"auctionEnd()": "2a24f46c",
							"bid(bytes32)": "957bb1e0",
							"bids(address)": "62ea82db",
							"changeState(uint8)": "268f1153",
							"depositReturns(address)": "3b6217f0",
							"highestBid()": "d57bde79",
							"highestBidder()": "91f90157",
							"reveal(uint256,bytes32)": "4036778f",
							"state()": "c19d93fb",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"auctionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blindBid\",\"type\":\"bytes32\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blindedBid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum BlindAuction.Phase\",\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositReturns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BlindAuction.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BindAction.sol\":\"BlindAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BindAction.sol\":{\"keccak256\":\"0xbaf7416ee5269cfa0a2a779bf4f11d893080b67a57d72ac1eea13f4e15b1f8e9\",\"urls\":[\"bzz-raw://c4ffdd0969d530abc3a95dfe63adc01a57b880c21c4f1eb0acdf88aca13bc5a3\",\"dweb:/ipfs/Qme6BfRiAD1aGAyMPnyFFxXAgvJoCz5ZpR4L5oMeZZ6Wrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "BindAction.sol:BlindAuction",
								"label": "state",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Phase)11"
							},
							{
								"astId": 17,
								"contract": "BindAction.sol:BlindAuction",
								"label": "beneficiary",
								"offset": 1,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 21,
								"contract": "BindAction.sol:BlindAuction",
								"label": "bids",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Bid)6_storage)"
							},
							{
								"astId": 23,
								"contract": "BindAction.sol:BlindAuction",
								"label": "highestBidder",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "BindAction.sol:BlindAuction",
								"label": "highestBid",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "BindAction.sol:BlindAuction",
								"label": "depositReturns",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Phase)11": {
								"encoding": "inplace",
								"label": "enum BlindAuction.Phase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Bid)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BlindAuction.Bid)",
								"numberOfBytes": "32",
								"value": "t_struct(Bid)6_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Bid)6_storage": {
								"encoding": "inplace",
								"label": "struct BlindAuction.Bid",
								"members": [
									{
										"astId": 3,
										"contract": "BindAction.sol:BlindAuction",
										"label": "blindedBid",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 5,
										"contract": "BindAction.sol:BlindAuction",
										"label": "deposit",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"BindAction.sol": {
				"ast": {
					"absolutePath": "BindAction.sol",
					"exportedSymbols": {
						"BlindAuction": [
							259
						]
					},
					"id": 260,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "BlindAuction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BlindAuction.Bid",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "blindedBid",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 6,
											"src": "105:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "105:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "deposit",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 6,
											"src": "147:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "147:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Bid",
									"nodeType": "StructDefinition",
									"scope": 259,
									"src": "64:113:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BlindAuction.Phase",
									"id": 11,
									"members": [
										{
											"id": 7,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "238:4:0"
										},
										{
											"id": 8,
											"name": "Bidding",
											"nodeType": "EnumValue",
											"src": "244:7:0"
										},
										{
											"id": 9,
											"name": "Reveal",
											"nodeType": "EnumValue",
											"src": "253:6:0"
										},
										{
											"id": 10,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "261:4:0"
										}
									],
									"name": "Phase",
									"nodeType": "EnumDefinition",
									"src": "225:41:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 15,
									"name": "state",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "273:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$11",
										"typeString": "enum BlindAuction.Phase"
									},
									"typeName": {
										"contractScope": null,
										"id": 12,
										"name": "Phase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 11,
										"src": "273:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$11",
											"typeString": "enum BlindAuction.Phase"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 13,
											"name": "Phase",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 11,
											"src": "294:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
												"typeString": "type(enum BlindAuction.Phase)"
											}
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "294:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$11",
											"typeString": "enum BlindAuction.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 17,
									"name": "beneficiary",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "312:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "312:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "62ea82db",
									"id": 21,
									"name": "bids",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "355:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
										"typeString": "mapping(address => struct BlindAuction.Bid)"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "363:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "355:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
											"typeString": "mapping(address => struct BlindAuction.Bid)"
										},
										"valueType": {
											"contractScope": null,
											"id": 19,
											"name": "Bid",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "374:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
												"typeString": "struct BlindAuction.Bid"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91f90157",
									"id": 23,
									"name": "highestBidder",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "400:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d57bde79",
									"id": 26,
									"name": "highestBid",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "435:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "435:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "460:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b6217f0",
									"id": 30,
									"name": "depositReturns",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "475:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 29,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "483:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "475:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 28,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "494:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "585:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$11",
																"typeString": "enum BlindAuction.Phase"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "595:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$11",
																	"typeString": "enum BlindAuction.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "reqPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "604:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$11",
																	"typeString": "enum BlindAuction.Phase"
																}
															},
															"src": "595:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															278
														],
														"referencedDeclaration": 277,
														"src": "587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "587:26:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "622:1:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"name": "validPhase",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "reqPhase",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 42,
												"src": "564:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$11",
													"typeString": "enum BlindAuction.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 31,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 11,
													"src": "564:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "563:16:0"
									},
									"src": "544:87:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "667:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 45,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "677:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "677:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 47,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "691:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "677:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															278
														],
														"referencedDeclaration": 277,
														"src": "669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "669:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "669:34:0"
											},
											{
												"id": 51,
												"nodeType": "PlaceholderStatement",
												"src": "712:1:0"
											}
										]
									},
									"documentation": null,
									"id": 53,
									"name": "onlyBeneficiary",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:2:0"
									},
									"src": "637:82:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "744:76:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "758:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 57,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "772:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "772:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "758:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "758:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "792:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "800:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
																"typeString": "type(enum BlindAuction.Phase)"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Bidding",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "800:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"src": "792:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "792:21:0"
											}
										]
									},
									"documentation": null,
									"id": 67,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:4:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "744:0:0"
									},
									"scope": 259,
									"src": "721:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "879:60:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 74,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "893:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 75,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "897:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"src": "893:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 80,
												"nodeType": "IfStatement",
												"src": "889:24:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 77,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																279,
																280
															],
															"referencedDeclaration": 279,
															"src": "905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "905:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 79,
													"nodeType": "ExpressionStatement",
													"src": "905:8:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 81,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "923:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 82,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "931:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"src": "923:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "923:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "268f1153",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 72,
											"modifierName": {
												"argumentTypes": null,
												"id": 71,
												"name": "onlyBeneficiary",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 53,
												"src": "863:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "863:15:0"
										}
									],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$11",
													"typeString": "enum BlindAuction.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 68,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 11,
													"src": "847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:9:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:0"
									},
									"scope": 259,
									"src": "826:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1025:119:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 95,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1037:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
																"typeString": "mapping(address => struct BlindAuction.Bid storage ref)"
															}
														},
														"id": 98,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 96,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1042:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1042:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1037:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bid_$6_storage",
															"typeString": "struct BlindAuction.Bid storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 100,
																"name": "blindBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1086:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "1117:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1117:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 99,
															"name": "Bid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1056:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Bid_$6_storage_ptr_$",
																"typeString": "type(struct BlindAuction.Bid storage pointer)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"blindedBid",
															"deposit"
														],
														"nodeType": "FunctionCall",
														"src": "1056:81:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bid_$6_memory",
															"typeString": "struct BlindAuction.Bid memory"
														}
													},
													"src": "1037:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bid_$6_storage",
														"typeString": "struct BlindAuction.Bid storage ref"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1037:100:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "957bb1e0",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 91,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1006:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
															"typeString": "type(enum BlindAuction.Phase)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Bidding",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1006:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												}
											],
											"id": 93,
											"modifierName": {
												"argumentTypes": null,
												"id": 90,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "995:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$11_$",
													"typeString": "modifier (enum BlindAuction.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "995:25:0"
										}
									],
									"name": "bid",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"name": "blindBid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 107,
												"src": "962:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 87,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "961:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:0"
									},
									"scope": 259,
									"src": "949:195:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1231:447:0",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"name": "refund",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 170,
														"src": "1241:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 118,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1241:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1255:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1241:15:0"
											},
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "bidToCheck",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 170,
														"src": "1270:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
															"typeString": "struct BlindAuction.Bid"
														},
														"typeName": {
															"contractScope": null,
															"id": 122,
															"name": "Bid",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 6,
															"src": "1270:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																"typeString": "struct BlindAuction.Bid"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "bids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1295:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
															"typeString": "mapping(address => struct BlindAuction.Bid storage ref)"
														}
													},
													"id": 127,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 125,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1300:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1300:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1295:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bid_$6_storage",
														"typeString": "struct BlindAuction.Bid storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1270:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 129,
															"name": "bidToCheck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1329:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																"typeString": "struct BlindAuction.Bid storage pointer"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blindedBid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1329:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 134,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "1381:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 135,
																		"name": "secret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "1388:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 132,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "1364:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1364:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1364:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 131,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "1354:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1354:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1329:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 161,
												"nodeType": "IfStatement",
												"src": "1325:297:0",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "1398:224:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 139,
																	"name": "refund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "1416:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 140,
																		"name": "bidToCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1426:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																			"typeString": "struct BlindAuction.Bid storage pointer"
																		}
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "1426:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1416:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "1416:28:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 144,
																		"name": "bidToCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1466:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																			"typeString": "struct BlindAuction.Bid storage pointer"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "1466:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "1488:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1466:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 159,
															"nodeType": "IfStatement",
															"src": "1462:146:0",
															"trueBody": {
																"id": 158,
																"nodeType": "Block",
																"src": "1495:113:0",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 149,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 274,
																						"src": "1530:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 150,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "1530:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 151,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 109,
																					"src": "1542:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 148,
																				"name": "placeBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 212,
																				"src": "1521:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1521:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 157,
																		"nodeType": "IfStatement",
																		"src": "1517:72:0",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 153,
																					"name": "refund",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 119,
																					"src": "1574:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 154,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 109,
																					"src": "1584:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1574:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 156,
																			"nodeType": "ExpressionStatement",
																			"src": "1574:15:0"
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 167,
															"name": "refund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1664:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1644:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1644:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1644:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1644:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1644:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4036778f",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 114,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1218:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
															"typeString": "type(enum BlindAuction.Phase)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reveal",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1218:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												}
											],
											"id": 116,
											"modifierName": {
												"argumentTypes": null,
												"id": 113,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "1207:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$11_$",
													"typeString": "modifier (enum BlindAuction.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1207:24:0"
										}
									],
									"name": "reveal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1170:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"name": "secret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1182:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:28:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1231:0:0"
									},
									"scope": 259,
									"src": "1154:524:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1779:322:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 180,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1793:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 181,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1802:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1793:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1789:62:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "1814:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1835:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 179,
															"id": 184,
															"nodeType": "Return",
															"src": "1828:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 187,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1864:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1889:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1881:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 188,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1881:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1881:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1864:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 200,
												"nodeType": "IfStatement",
												"src": "1860:154:0",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "1893:121:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 193,
																		"name": "depositReturns",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "1960:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 195,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 194,
																		"name": "highestBidder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1975:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1960:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "highestBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1993:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1960:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 198,
															"nodeType": "ExpressionStatement",
															"src": "1960:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 201,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2023:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 202,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "2036:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2023:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2023:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 205,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2051:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 206,
														"name": "bidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2067:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2051:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2051:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2090:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 179,
												"id": 210,
												"nodeType": "Return",
												"src": "2083:11:0"
											}
										]
									},
									"documentation": null,
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "placeBid",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "bidder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "1702:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "1718:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1701:28:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "1761:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1761:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1760:14:0"
									},
									"scope": 259,
									"src": "1684:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "2169:171:0",
										"statements": [
											{
												"assignments": [
													216
												],
												"declarations": [
													{
														"constant": false,
														"id": 216,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 243,
														"src": "2182:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 215,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2182:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 217,
														"name": "depositReturns",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2196:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 220,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 218,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "2211:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2211:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2196:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2182:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2241:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2250:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2241:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															278
														],
														"referencedDeclaration": 277,
														"src": "2232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2232:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 228,
															"name": "depositReturns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2262:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 231,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 229,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "2277:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2277:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2262:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2291:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2262:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2262:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 240,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "2322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 235,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "2302:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2302:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2302:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2302:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3ccfd60b",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2159:2:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:0:0"
									},
									"scope": 259,
									"src": "2142:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2480:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 254,
															"name": "highestBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2511:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 251,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2490:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2490:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2490:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2490:32:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2a24f46c",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 247,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2463:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
															"typeString": "type(enum BlindAuction.Phase)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2463:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												}
											],
											"id": 249,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "2452:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$11_$",
													"typeString": "modifier (enum BlindAuction.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2452:22:0"
										}
									],
									"name": "auctionEnd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2441:2:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:0:0"
									},
									"scope": 259,
									"src": "2422:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 260,
							"src": "35:2496:0"
						}
					],
					"src": "0:2543:0"
				},
				"id": 0
			}
		}
	}
}